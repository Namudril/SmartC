import { CONTRACT } from '../index'

describe('Assembly compilation:', () => {
    it('should optimize: all api EXT_FUN_DAT', () => {
        /* this is source code for test:
            #include APIFunctions\n#pragma verboseAssembly\n// #pragma optimizationLevel 3\n\nlong testID, a, b;\n\nswitch (testID) {\ncase 0: // Same content\n    Set_A1(25);\n    a=25;\n    Set_A1(a);\n    break;\ncase 1: // Same unknown var\n    Set_A2(a);\n    b++;\n    Set_A2(a);\n    break;\ncase 2: // Operation destroys same\n    Set_A3(a);\n    a++;\n    Set_A3(a);\n    break;\ncase 3: // Operation destroys same\n    Set_A4(a);\n    a^=b;\n    Set_A4(a);\n    break;\ncase 4: // Same content\n    Set_B1(25);\n    a=25;\n    Set_B1(a);\n    break;\ncase 5: // Same unknown var\n    Set_B2(a);\n    b++;\n    Set_B2(a);\n    break;\ncase 6: // Operation destroys same\n    Set_B3(a);\n    a++;\n    Set_B3(a);\n    break;\ncase 7: // Operation destroys same\n    Set_B4(a);\n    a|=b;\n    Set_B4(a);\n    break;\ncase 8: // A_to_Tx_after_Timestamp\n    Set_B1_B2(a, 0);\n    B_To_Address_Of_Tx_In_A();\n    Set_B1(a); Set_B2(0); Set_B3(0); Set_B4(0);\n    break;\n\n}\n
        */
        const code = [
            '^declare r0',
            '^declare r1',
            '^declare r2',
            '^declare testID',
            '^declare a',
            '^declare b',
            '',
            '^comment line 7 switch (testID) {',
            'BZR $testID :__switch1_0',
            'SET @r0 #0000000000000001',
            'BEQ $testID $r0 :__switch1_1',
            'SET @r0 #0000000000000002',
            'BEQ $testID $r0 :__switch1_2',
            'SET @r0 #0000000000000003',
            'BEQ $testID $r0 :__switch1_3',
            'SET @r0 #0000000000000004',
            'BEQ $testID $r0 :__switch1_4',
            'SET @r0 #0000000000000005',
            'BEQ $testID $r0 :__switch1_5',
            'SET @r0 #0000000000000006',
            'BEQ $testID $r0 :__switch1_6',
            'SET @r0 #0000000000000007',
            'BEQ $testID $r0 :__switch1_7',
            'SET @r0 #0000000000000008',
            'BEQ $testID $r0 :__switch1_8',
            'FIN',
            '^comment line 8 case 0: // Same content',
            '__switch1_0:',
            '^comment line 9     Set_A1(25);',
            'SET @r0 #0000000000000019',
            'FUN set_A1 $r0',
            '^comment line 10     a=25;',
            'SET @a #0000000000000019',
            '^comment line 11     Set_A1(a);',
            'FUN set_A1 $a',
            '^comment line 12     break;',
            'FIN',
            '^comment line 13 case 1: // Same unknown var',
            '__switch1_1:',
            '^comment line 14     Set_A2(a);',
            'FUN set_A2 $a',
            '^comment line 15     b++;',
            'INC @b',
            '^comment line 16     Set_A2(a);',
            'FUN set_A2 $a',
            '^comment line 17     break;',
            'FIN',
            '^comment line 18 case 2: // Operation destroys same',
            '__switch1_2:',
            '^comment line 19     Set_A3(a);',
            'FUN set_A3 $a',
            '^comment line 20     a++;',
            'INC @a',
            '^comment line 21     Set_A3(a);',
            'FUN set_A3 $a',
            '^comment line 22     break;',
            'FIN',
            '^comment line 23 case 3: // Operation destroys same',
            '__switch1_3:',
            '^comment line 24     Set_A4(a);',
            'FUN set_A4 $a',
            '^comment line 25     a^=b;',
            'XOR @a $b',
            '^comment line 26     Set_A4(a);',
            'FUN set_A4 $a',
            '^comment line 27     break;',
            'FIN',
            '^comment line 28 case 4: // Same content',
            '__switch1_4:',
            '^comment line 29     Set_B1(25);',
            'SET @r0 #0000000000000019',
            'FUN set_B1 $r0',
            '^comment line 30     a=25;',
            'SET @a #0000000000000019',
            '^comment line 31     Set_B1(a);',
            'FUN set_B1 $a',
            '^comment line 32     break;',
            'FIN',
            '^comment line 33 case 5: // Same unknown var',
            '__switch1_5:',
            '^comment line 34     Set_B2(a);',
            'FUN set_B2 $a',
            '^comment line 35     b++;',
            'INC @b',
            '^comment line 36     Set_B2(a);',
            'FUN set_B2 $a',
            '^comment line 37     break;',
            'FIN',
            '^comment line 38 case 6: // Operation destroys same',
            '__switch1_6:',
            '^comment line 39     Set_B3(a);',
            'FUN set_B3 $a',
            '^comment line 40     a++;',
            'INC @a',
            '^comment line 41     Set_B3(a);',
            'FUN set_B3 $a',
            '^comment line 42     break;',
            'FIN',
            '^comment line 43 case 7: // Operation destroys same',
            '__switch1_7:',
            '^comment line 44     Set_B4(a);',
            'FUN set_B4 $a',
            '^comment line 45     a|=b;',
            'BOR @a $b',
            '^comment line 46     Set_B4(a);',
            'FUN set_B4 $a',
            '^comment line 47     break;',
            'FIN',
            '^comment line 48 case 8: // A_to_Tx_after_Timestamp',
            '__switch1_8:',
            '^comment line 49     Set_B1_B2(a, 0);',
            'CLR @r0',
            'FUN set_B1_B2 $a $r0',
            '^comment line 50     B_To_Address_Of_Tx_In_A();',
            'FUN B_to_Address_of_Tx_in_A',
            '^comment line 51     Set_B1(a); Set_B2(0); Set_B3(0); Set_B4(0);',
            'FUN set_B1 $a',
            'CLR @r0',
            'FUN set_B2 $r0',
            'CLR @r0',
            'FUN set_B3 $r0',
            'CLR @r0',
            'FUN set_B4 $r0',
            '^comment line 52     break;',
            'FIN'
        ]
        const optCode = [
            '^declare r0',
            '^declare r1',
            '^declare r2',
            '^declare testID',
            '^declare a',
            '^declare b',
            '',
            '^comment line 7 switch (testID) {',
            'BZR $testID :__switch1_0',
            'SET @r0 #0000000000000001',
            'BEQ $testID $r0 :__switch1_1',
            'SET @r0 #0000000000000002',
            'BEQ $testID $r0 :__switch1_2',
            'SET @r0 #0000000000000003',
            'BEQ $testID $r0 :__switch1_3',
            'SET @r0 #0000000000000004',
            'BEQ $testID $r0 :__switch1_4',
            'SET @r0 #0000000000000005',
            'BEQ $testID $r0 :__switch1_5',
            'SET @r0 #0000000000000006',
            'BEQ $testID $r0 :__switch1_6',
            'SET @r0 #0000000000000007',
            'BEQ $testID $r0 :__switch1_7',
            'SET @r0 #0000000000000008',
            'BEQ $testID $r0 :__switch1_8',
            'FIN',
            '^comment line 8 case 0: // Same content',
            '__switch1_0:',
            '^comment line 9     Set_A1(25);',
            'SET @r0 #0000000000000019',
            'FUN set_A1 $r0',
            '^comment line 10     a=25;',
            'SET @a #0000000000000019',
            '^comment line 11     Set_A1(a);',
            '^comment line 12     break;',
            'FIN',
            '^comment line 13 case 1: // Same unknown var',
            '__switch1_1:',
            '^comment line 14     Set_A2(a);',
            'FUN set_A2 $a',
            '^comment line 15     b++;',
            'INC @b',
            '^comment line 16     Set_A2(a);',
            '^comment line 17     break;',
            'FIN',
            '^comment line 18 case 2: // Operation destroys same',
            '__switch1_2:',
            '^comment line 19     Set_A3(a);',
            'FUN set_A3 $a',
            '^comment line 20     a++;',
            'INC @a',
            '^comment line 21     Set_A3(a);',
            'FUN set_A3 $a',
            '^comment line 22     break;',
            'FIN',
            '^comment line 23 case 3: // Operation destroys same',
            '__switch1_3:',
            '^comment line 24     Set_A4(a);',
            'FUN set_A4 $a',
            '^comment line 25     a^=b;',
            'XOR @a $b',
            '^comment line 26     Set_A4(a);',
            'FUN set_A4 $a',
            '^comment line 27     break;',
            'FIN',
            '^comment line 28 case 4: // Same content',
            '__switch1_4:',
            '^comment line 29     Set_B1(25);',
            'SET @r0 #0000000000000019',
            'FUN set_B1 $r0',
            '^comment line 30     a=25;',
            'SET @a #0000000000000019',
            '^comment line 31     Set_B1(a);',
            '^comment line 32     break;',
            'FIN',
            '^comment line 33 case 5: // Same unknown var',
            '__switch1_5:',
            '^comment line 34     Set_B2(a);',
            'FUN set_B2 $a',
            '^comment line 35     b++;',
            'INC @b',
            '^comment line 36     Set_B2(a);',
            '^comment line 37     break;',
            'FIN',
            '^comment line 38 case 6: // Operation destroys same',
            '__switch1_6:',
            '^comment line 39     Set_B3(a);',
            'FUN set_B3 $a',
            '^comment line 40     a++;',
            'INC @a',
            '^comment line 41     Set_B3(a);',
            'FUN set_B3 $a',
            '^comment line 42     break;',
            'FIN',
            '^comment line 43 case 7: // Operation destroys same',
            '__switch1_7:',
            '^comment line 44     Set_B4(a);',
            'FUN set_B4 $a',
            '^comment line 45     a|=b;',
            'BOR @a $b',
            '^comment line 46     Set_B4(a);',
            'FUN set_B4 $a',
            '^comment line 47     break;',
            'FIN',
            '^comment line 48 case 8: // A_to_Tx_after_Timestamp',
            '__switch1_8:',
            '^comment line 49     Set_B1_B2(a, 0);',
            'CLR @r0',
            'FUN set_B1_B2 $a $r0',
            '^comment line 50     B_To_Address_Of_Tx_In_A();',
            'FUN B_to_Address_of_Tx_in_A',
            '^comment line 51     Set_B1(a); Set_B2(0); Set_B3(0); Set_B4(0);',
            'FUN set_B1 $a',
            '^comment line 52     break;',
            'FIN'
        ]
        const result = new CONTRACT(code).optimize()
        expect(result).toEqual(optCode)
    })
})
